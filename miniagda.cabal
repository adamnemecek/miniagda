name:            MiniAgda
version:         0.20120115
build-type:      Simple
cabal-version:   >= 1.8 && < 2
license:         AllRightsReserved
-- You may prefer to use a licence which allows others to use your code:
-- license:         OtherLicense
-- license-file:    ...
author:          Andreas Abel
maintainer:      Andreas Abel <andreas.abel@ifi.lmu.de>
homepage:        http://www2.tcs.ifi.lmu.de/~abel/miniagda/
category:        Dependent types
synopsis:        ...
description:
  MiniAgda is a tiny dependently-typed programming language in the style
  of Agda. It serves as a laboratory to test potential additions to the
  language and type system of Agda. MiniAgda's termination checker is a
  fusion of sized types and size-change termination and supports
  coinduction. Equality incorporates eta-expansion at record and
  singleton types. Function arguments can be declared as static; such
  arguments are discarded during equality checking and compilation.

  Recent features include bounded size quantification and destructor
  patterns for a more general handling of coinduction. 

executable miniagda
  hs-source-dirs:   .
  build-depends:    array >= 0.3 && < 0.5,
                    base >= 4.2 && < 4.6,
                    containers >= 0.3 && < 0.5,
                    haskell-src-exts >= 1.9.5 && < 1.12,
                    mtl == 2.0.*,
                    pretty >= 1.0 && < 1.2,
--                    utility-ht >= 0.0.1 && < 1.0,
                    IfElse >= 0.85 && < 2.0
  build-tools:      happy >= 1.15 && < 2,
                    alex >= 2.0.1 && < 4
  extensions:       MultiParamTypeClasses
                    TypeSynonymInstances
                    FlexibleInstances
                    FlexibleContexts
                    GeneralizedNewtypeDeriving
                    PatternGuards
                    TupleSections
  main-is:          Main.hs
  other-modules:    Abstract
                    Concrete
                    Eval
                    Extract
                    HsSyntax
                    Lexer
                    Main
                    Parser
                    Polarity
                    PrettyTCM
                    ScopeChecker
                    Semiring
                    SparseMatrix
                    SPos
                    TCM
                    Termination
                    ToHaskell
                    Tokens
                    TraceError
                    TreeShapedOrder
                    TypeChecker
                    Util
                    Value
                    Warshall
