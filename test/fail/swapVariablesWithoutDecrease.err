MiniAgda by Andreas Abel and Karl Mehltretter
--- opening "swapVariablesWithoutDecrease.ma" ---
--- scope checking ---
--- type checking ---
type  SNat : + Size -> Set
term  zero : .[s!ze : Size] -> .[i < s!ze] -> SNat s!ze
term  zero : .[i : Size] -> < zero i : SNat $i >
term  succ : .[s!ze : Size] -> .[i < s!ze] -> ^ SNat i -> SNat s!ze
term  succ : .[i : Size] -> ^(y1 : SNat i) -> < succ i y1 : SNat $i >
type  SNat : + Size -> Set
term  bla : .[i : Size] -> .[j : Size] -> SNat i -> SNat j -> SNat #
{ bla [.$i] [j] (succ [i] x) y = bla [$j] [i] (succ [j] y) x
}
error during typechecking:
Termination check for function bla fails 
