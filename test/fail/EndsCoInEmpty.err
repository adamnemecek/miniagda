MiniAgda by Andreas Abel and Karl Mehltretter
--- opening "EndsCoInEmpty.ma" ---
--- scope checking ---
--- type checking ---
type  Bool : Set
term  true : < true : Bool >
term  false : < false : Bool >
type  Bool : Set
type  EmptyOr : ++(A : Set) -> ^ Bool -> Set
term  inn : .[A : Set] -> ^(out : A) -> < inn out : EmptyOr A true >
type  EmptyOr : ++(A : Set) -> ^ Bool -> Set
G> fun out : .[A : Set] -> (inn : EmptyOr A true) -> A
G> { out A (inn destructor_argument_out) = destructor_argument_out
}
term  out : .[A : Set] -> (inn : EmptyOr A true) -> A
{ out [A] (inn destructor_argument_out) = destructor_argument_out
}
term  exFalso : .[A : Set] -> .[B : Set] -> EmptyOr A false -> B
{ exFalso [A] [B] ()
}
type  Stream : ++(A : Set) -> - Size -> Set
term  cons : .[A : Set] -> .[i : Size] -> ^(head : A) -> ^(tail : Stream A i) -> < cons i head tail : Stream A $i >
type  Stream : ++(A : Set) -> - Size -> Set
G> fun head : .[A : Set] -> .[i : Size] -> (cons : Stream A $i) -> A
G> { head A i (cons .i destructor_argument_head destructor_argument_tail) = destructor_argument_head
}
term  head : .[A : Set] -> .[i : Size] -> (cons : Stream A $i) -> A
{ head [A] [i] (cons [.i] destructor_argument_head destructor_argument_tail) = destructor_argument_head
}
G> fun tail : .[A : Set] -> .[i : Size] -> (cons : Stream A $i) -> Stream A i
G> { tail A i (cons .i destructor_argument_head destructor_argument_tail) = destructor_argument_tail
}
term  tail : .[A : Set] -> .[i : Size] -> (cons : Stream A $i) -> Stream A i
{ tail [A] [i] (cons [.i] destructor_argument_head destructor_argument_tail) = destructor_argument_tail
}
term  bla : .[A : Set] -> .[i : Size] -> EmptyOr (Stream A i) false
error during typechecking:
bla
/// clause 1
/// pattern $i
/// checkPattern $i : matching on size, checking that target .[i : Size] -> EmptyOr (Stream A i) false ends in correct coinductive sized type
/// new i : Size
/// endsInSizedCo: EmptyOr (Stream A i) false
/// endsInSizedCo: panic: target type EmptyOr (Stream A i) false is not an instance of any constructor
