MiniAgda by Andreas Abel and Karl Mehltretter
--- opening "Tm.ma" ---
--- scope checking ---
--- type checking ---
type  Stream : ++(A : Set) -> - Size -> Set
term  cons : .[A : Set] -> .[i : Size] -> ^(head : A) -> ^(tail : Stream A i) -> < cons i head tail : Stream A $i >
type  Stream : ++(A : Set) -> - Size -> Set
G> fun head : .[A : Set] -> .[i : Size] -> (cons : Stream A $i) -> A
G> { head A i (cons .i destructor_argument_head destructor_argument_tail) = destructor_argument_head
}
term  head : .[A : Set] -> .[i : Size] -> (cons : Stream A $i) -> A
{ head [A] [i] (cons [.i] destructor_argument_head destructor_argument_tail) = destructor_argument_head
}
G> fun tail : .[A : Set] -> .[i : Size] -> (cons : Stream A $i) -> Stream A i
G> { tail A i (cons .i destructor_argument_head destructor_argument_tail) = destructor_argument_tail
}
term  tail : .[A : Set] -> .[i : Size] -> (cons : Stream A $i) -> Stream A i
{ tail [A] [i] (cons [.i] destructor_argument_head destructor_argument_tail) = destructor_argument_tail
}
term  iterate : .[A : Set] -> (step : A -> A) -> (start : A) -> .[i : Size] -> Stream A i
{ iterate [A] step start $[i] = cons [i] start (iterate [A] step (step start) [i])
}
type  Tm : Set
term  abs : ^(y0 : ^ Tm -> Tm) -> < abs y0 : Tm >
term  app : ^(y0 : Tm) -> ^(y1 : Tm) -> < app y0 y1 : Tm >
type  Tm : Set
warning: ignoring error: polarity check ++ <= - failed
warning: ignoring error: polarity check ++ <= + failed
term  sapp : ^ Tm -> Tm
{ sapp x = app x x
}
term  delta : Tm
term  delta = abs (\ x -> sapp x)
term  omega : Tm
term  omega = app delta delta
term  step : Tm -> Tm
error during typechecking:
step
/// clause 3
/// right hand side
/// checkExpr 1 |- abs (\ x -> step (f x)) : Tm
/// checkForced fromList [(f,0)] |- abs (\ x -> step (f x)) : Tm
/// checkExpr 1 |- \ x -> step (f x) : ^ Tm -> Tm
/// checkForced fromList [(f,0)] |- \ x -> step (f x) : ^ Tm -> Tm
/// new x : Tm
/// checkExpr 2 |- step (f x) : Tm
/// inferExpr' step (f x)
/// inferExpr' f x
/// inferExpr' x
/// inferExpr: variable x : Tm may not occur
/// , because of polarity
/// polarity check ^ <= * failed
