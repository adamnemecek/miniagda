MiniAgda by Andreas Abel and Karl Mehltretter
--- opening "ResurrectFromErasedPattern.ma" ---
--- scope checking ---
--- type checking ---
type  Bool : Set
term  true : < true : Bool >
term  false : < false : Bool >
type  Nat : ^ Bool -> Set
term  zero : < zero : Nat true >
term  succ : .[b : Bool] -> ^(y1 : Nat b) -> < succ b y1 : Nat false >
term  f : (b : Bool) -> .[Nat b] -> Nat false
error during typechecking:
f
/// clause 2
/// right hand side
/// checkExpr 2 |- succ false (succ b n) : Nat false
/// checkForced fromList [(n,1),(b,0)] |- succ false (succ b n) : Nat false
/// checkExpr 2 |- succ b n : Nat false
/// checkForced fromList [(n,1),(b,0)] |- succ b n : Nat false
/// inferExpr' n
/// inferExpr: variable n : Nat b may not occur
/// , because it is marked as erased
