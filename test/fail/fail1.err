MiniAgda by Andreas Abel and Karl Mehltretter
--- opening "fail1.ma" ---
--- scope checking ---
--- type checking ---
type  SNat : + Size -> Set
term  SNat.zero : .[s!ze : Size] -> .[i < s!ze] -> SNat s!ze
term  SNat.zero : .[i : Size] -> < SNat.zero i : SNat $i >
term  SNat.succ : .[s!ze : Size] -> .[i < s!ze] -> ^ SNat i -> SNat s!ze
term  SNat.succ : .[i : Size] -> ^(y1 : SNat i) -> < SNat.succ i y1 : SNat $i >
term  inc : .[i : Size] -> .[j : Size] -> SNat i -> SNat j
error during typechecking:
inc
/// clause 1
/// size constraints [?0+1<=v1,v0<=?0,SizeMeta(?0)] unsolvable
