MiniAgda by Andreas Abel and Karl Mehltretter
--- opening "onesStreamUnguarded.ma" ---
--- scope checking ---
--- type checking ---
type  Stream : ++(A : Set) -> - Size -> Set
term  cons : .[A : Set] -> .[i : Size] -> ^ A -> ^ Stream A i -> Stream A $i
type  Stream : ++(A : Set) -> - Size -> Set
type  Nat : Set
term  zero : Nat
term  succ : ^ Nat -> Nat
type  Nat : Set
term  copyFirst : .[i : Size] -> Stream Nat i -> Stream Nat $i
error during typechecking:
copyFirst
/// clause 1
/// pattern $i
/// checkPattern $i : matching on size, checking that target .[i : Size] -> (~1 : Stream Nat i) -> Stream Nat $i ends in correct coinductive sized type
/// new i : Size
/// endsInSizedCo: (~1 : Stream Nat i) -> Stream Nat $i
/// new  : (Stream {Nat {i = v0}} v0)
/// endsInSizedCo: Stream Nat $i
/// endsInSizedCo: target Stream Nat $i of corecursive function is neither a CoSet or codata of size i nor a tuple type
