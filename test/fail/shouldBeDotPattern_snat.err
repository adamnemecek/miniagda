MiniAgda by Andreas Abel and Karl Mehltretter
--- opening "shouldBeDotPattern_snat.ma" ---
--- scope checking ---
--- type checking ---
type  SNat : + Size -> Set
term  zero : .[s!ze : Size] -> .[i < s!ze] -> SNat s!ze
term  zero : .[i : Size] -> < zero i : SNat $i >
term  succ : .[s!ze : Size] -> .[i < s!ze] -> ^ SNat i -> SNat s!ze
term  succ : .[i : Size] -> ^(y1 : SNat i) -> < succ i y1 : SNat $i >
type  SNat : + Size -> Set
term  z : SNat #
term  z = zero [#]
term  one : SNat #
term  one = succ [#] z
term  two : SNat #
term  two = succ [#] one
term  three : SNat #
term  three = succ [#] two
term  add : .[i : Size] -> .[j : Size] -> SNat i -> SNat j -> SNat #
error during typechecking:
add
/// clause 1
/// pattern $i
/// successor pattern only allowed in cofun
