MiniAgda by Andreas Abel and Karl Mehltretter
--- opening "OverlappingPatternIndFam-sound.ma" ---
--- scope checking ---
--- type checking ---
type  Bool : Set
term  true : < true : Bool >
term  false : < false : Bool >
type  Id : ^(A : Set) -> ^(a : A) -> ^ A -> Set
term  refl : .[A : Set] -> .[a : A] -> < refl : Id A a a >
term  subst : .[A : Set] -> (a : A) -> (b : A) -> Id A a b -> .[P : A -> Set] -> P a -> P b
{ subst [A] a .a (refl) [P] x = x
}
type  DecEq : ^(A : Set) -> ^(a : A) -> ^ A -> Set
term  eq : .[A : Set] -> .[a : A] -> < eq : DecEq A a a >
term  notEq : .[A : Set] -> .[a : A] -> .[b : A] -> < notEq b : DecEq A a b >
error during typechecking:
fDiag
/// checkExpr 0 |- \ f -> \ A -> \ a -> refl : (f : .[A : Set] -> (a : A) -> (b : A) -> DecEq A a b) -> .[A : Set] -> (a : A) -> Id (DecEq A a a) (f [A] a a) eq
/// checkForced fromList [] |- \ f -> \ A -> \ a -> refl : (f : .[A : Set] -> (a : A) -> (b : A) -> DecEq A a b) -> .[A : Set] -> (a : A) -> Id (DecEq A a a) (f [A] a a) eq
/// new f : (.[A : Set] -> (a : A) -> (b : A) -> DecEq A a b)
/// checkExpr 1 |- \ A -> \ a -> refl : .[A : Set] -> (a : A) -> Id (DecEq A a a) (f [A] a a) eq
/// checkForced fromList [(f,0)] |- \ A -> \ a -> refl : .[A : Set] -> (a : A) -> Id (DecEq A a a) (f [A] a a) eq
/// new A : Set
/// checkExpr 2 |- \ a -> refl : (a : A) -> Id (DecEq A a a) (f [A] a a) eq
/// checkForced fromList [(A,1),(f,0)] |- \ a -> refl : (a : A) -> Id (DecEq A a a) (f [A] a a) eq
/// new a : v1
/// checkExpr 3 |- refl : Id (DecEq A a a) (f [A] a a) eq
/// checkForced fromList [(A,1),(f,0),(a,2)] |- refl : Id (DecEq A a a) (f [A] a a) eq
/// leqVal' (subtyping) [(A,1),(f,0),(a,2)] |- < refl : Id (DecEq A a a) (f [A] a a) (f [A] a a) >  <=+  Id (DecEq A a a) (f [A] a a) eq
/// leqVal' (subtyping) [(A,1),(f,0),(a,2)] |- Id (DecEq A a a) (f [A] a a) (f [A] a a)  <=+  Id (DecEq A a a) (f [A] a a) eq
/// leqVal' [(A,1),(f,0),(a,2)] |- f [A] a a  <=^  eq : DecEq A a a
/// leqApp: (v0 {[A] {a = v2, A = v1, f = (v0 Up (.[A : Set] -> (a : A) -> (b : A) -> DecEq A a b))}} v2 v2)[] !<=^ eq{}[]
