MiniAgda by Andreas Abel and Karl Mehltretter
--- opening "DescendAscend.ma" ---
--- scope checking ---
--- type checking ---
type  Nat : Set
term  zero : < zero : Nat >
term  succ : ^(y0 : Nat) -> < succ y0 : Nat >
term  plus : Nat -> Nat -> Nat
{}
term  f : Nat -> Nat
term  g : Nat -> Nat -> Nat
{ f (succ (succ (succ n))) = g n n
}
{ g (succ n) m = plus (g n (succ m)) (f m)
}
error during typechecking:
Termination check for mutual block [f,g] fails for [f,g]
